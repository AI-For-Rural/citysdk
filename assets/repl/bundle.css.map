{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Output.svelte",
    "../../Input.svelte",
    "../../Map.svelte",
    "../../Clipboard.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Input from './component/Input.svelte'\n\timport Output from './component/Output.svelte'\n\n\timport JSON5 from 'json5'\n\timport {\n\t\tcensusPromise\n\t} from './utils.js'\n\n\texport let query = {}\n\texport let response = {}\n\t$: value = JSON5.stringify(query, null, 2)\n\tlet loading = false;\n\n\tasync function runQuery(event) {\n\t\tloading = true\n\t\tquery = event.detail;\n\t\tresponse = await censusPromise(query).catch(error => error)\n\t\tloading = false\n\t}\n</script>\n\n<main>\n\t<Input {value} {loading} on:message={runQuery} />\n\t<Output {response} />\n</main>\n\n<style>\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tbox-shadow: 2px 3px;\n\t\tborder: 1px solid;\n\t\tposition: relative;\n\t}\n</style>",
    "<script>\n    import formatHighlight from \"json-format-highlight\";\n    import Map from './Map.svelte';\n    import Clipboard from './Clipboard.svelte';\n\n    export let response = {}\n    let codeRef;\n\n    //help from https://github.com/ftonato/svelte-debugger/blob/master/Debugger.svelte\n    const colorOptions = {\n        keyColor: \"#484848\",\n        numberColor: \"#37b3ff\",\n        stringColor: \"#f25050\",\n        trueColor: \"#1d6864\",\n        falseColor: \"#f66578\",\n        nullColor: \"cornflowerblue\"\n    };\n\n    $: isGeoJSON = typeof (response) === \"object\" && 'features' in response && response.features.length;\n    //reset view when response/isGeoJSON is updated\n    $: view = isGeoJSON ? \"map\" : \"json\";\n\n    $: getFormatted = () => {\n        //todo - truncate larger response\n        return formatHighlight(JSON.stringify(response, null, 2), colorOptions);\n    }\n\n    function changeView(value) {\n        view = value;\n    }\n</script>\n\n<div class=\"output\">\n    {#if isGeoJSON}\n        <div class=\"view-toggle\">\n            <button class=\"{view === 'json' ? 'active' : '' }\" on:click={()=> changeView('json')}>JSON</button>\n            <button class=\"{view === 'map' ? 'active' : '' }\" on:click={()=> changeView('map')}>Map</button>\n        </div>\n    {/if}\n\n    {#if view === 'map'}\n        <Map {response}/>\n    {:else}\n    <pre>\n        <code bind:this={codeRef}>\n            {@html getFormatted()}\n        </code>\n    </pre>\n    {/if}\n    <Clipboard element={codeRef}/>\n</div>\n\n<style>\n    .output {\n        height: 400px;\n        flex: 1 1 340px;\n        min-width: 340px;\n        overflow: auto;\n        background: #ebebeb;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .view-toggle {\n        position: sticky;\n        top: 0;\n        width: 100%;\n        background: #d8d8d8;\n        height: 2.2em;\n        z-index: 500;\n    }\n\n    button {\n        background: inherit;\n        text-align: left;\n        box-sizing: order-box;\n        color: rgb(114, 114, 114);\n        border: none;\n        border-bottom: .3em solid transparent;\n        border-radius: 0;\n        font-family: monospace;\n        font-size: 1em;\n        font-weight: 500;\n        padding: .5em .5em .3em .5em;\n    }\n\n    .active {\n        border-bottom: 3px solid #0071bc;\n    }\n\n    pre {\n        padding: 1em;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n\n    pre code {\n        font-size: 0.9em;\n        line-height: 0.2em;\n    }\n</style>",
    "<script>\n    import {\n        createEventDispatcher\n    } from 'svelte';\n    import JSON5 from 'json5'\n\n    import argumentSchema from '../schema.js'\n\n    const dispatch = createEventDispatcher();\n\n    export let value = '';\n    export let loading = false;\n    let query;\n    let invalid;\n\n    //when code is changed, check if object is invalid \n    $: {\n        checkInvalid(value);\n    }\n\n    function checkInvalid(value) {\n        //convert to object\n        try {\n            query = JSON5.parse(value)\n        } catch (error) {\n            invalid = error.message;\n            return;\n        }\n\n        //schema check\n        const valid = argumentSchema(query)\n        if (!valid) {\n            const error = argumentSchema.errors[0];\n            invalid = `${error.dataPath} ${error.message}`\n        } else {\n            invalid = null;\n        }\n\n    }\n</script>\n\n\n\n<form class=\"input\">\n    <textarea placeholder=\"add query here\" bind:value spellcheck=\"false\"></textarea>\n    <div class=\"toggles\">\n        {#if invalid}\n        <p class=\"error\">{invalid}</p>\n        {:else if loading}\n        <p class=\"loading\">loading...</p>\n        {:else}\n        <button on:click|preventDefault={()=> dispatch('message', query)}>Run Query</button>\n        {/if}\n    </div>\n</form>\n\n<style>\n    .input {\n        min-height: 400px;\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 340px;\n        min-width: 340px;\n    }\n\n    .toggles {\n        padding: 0px 5px;\n    }\n\n    .loading{\n        color: rgb(61, 96, 136);\n        font-weight: 1000;\n    }\n\n    .error{\n        color: indianred;\n        font-weight: 1000;\n    }\n\n    button {\n        padding: 0.1em 0.25em;\n        margin-top: .4em;\n        background-color: #0071bc;\n        border: 0;\n        border-radius: 5px;\n        color: #fff;\n        cursor: pointer;\n        display: inline-block;\n        font-family: \"Source Sans Pro\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n        font-size: 1.1em;\n        font-weight: 600;\n        line-height: 1;\n        text-align: center;\n        text-decoration: none;\n    }\n\n    textarea {\n        flex: 1;\n        margin: 0;\n        border: none;\n        resize: none;\n        overflow: auto;\n        background: #272822;\n        color: #f8f8f2;\n        font-family: \"Roboto Mono Web\", \"Bitstream Vera Sans Mono\", \"Consolas\",\n            \"Courier\", monospace;\n        padding: 1.2em;\n        min-width: 100%;\n    }\n</style>",
    "<script>\n    import {\n        onMount\n    } from 'svelte';\n\n    export let response;\n    let container;\n    let map;\n    let layer;\n\n    onMount(() => {\n        map = L.map(container, {\n\n        }).setView([51.505, -0.09], 13);\n\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            maxZoom: 19,\n            attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap contributors</a>'\n        }).addTo(map);\n\n    })\n\n    $: {\n        if (map) {\n            //remove previous layer\n            if (layer) map.removeLayer(layer)\n\n            layer = L.geoJSON(response, {\n                onEachFeature: (feature, layer) => {\n                    const table = Object.keys(feature.properties).map(function (key) {\n                        return `<p><b>${key}</b>: ${feature.properties[key]}</p>`;\n                    }).join(\"\");\n                    layer.bindPopup(table);\n                }\n            }).addTo(map)\n\n            const group = new L.featureGroup([layer]);\n            map.fitBounds(group.getBounds())\n        }\n    }\n</script>\n\n\n<div id=\"map\" bind:this={container}></div>\n\n\n<style>\n    #map {\n        width: 100%;\n        height: 100%;\n    }\n\n    :global(.leaflet-popup-content) {\n        overflow: auto;\n        max-height: 200px;\n    }\n\n    :global(.leaflet-popup-content p) {\n        margin: 2px 0 !important;\n    }\n</style>",
    "<script>\n    //https://stackoverflow.com/questions/36639681/how-to-copy-text-from-a-div-to-clipboard\n    export let element;\n    let setback = false;\n\n    function copyRef() {\n        if (element) {\n            const range = document.createRange();\n\n            if (element.style.display === \"none\") {\n                setback = true;\n                element.style.display = \"block\";\n            }\n\n            range.selectNode(element);\n            window.getSelection().removeAllRanges(); // clear current selection\n\n            window.getSelection().addRange(range); // to select text\n\n            document.execCommand(\"copy\");\n            window.getSelection().removeAllRanges(); // to deselect\n\n            if (setback === true) {\n                element.style.display = \"none\";\n            }\n        }\n    }\n</script>\n\n<span title=\"Copy Output\" class=\"copy\" on:click={copyRef}>ðŸ“‹</span>\n\n\n\n<style>\n    .copy {\n        position: absolute;\n        right: 15px;\n        bottom: 10px;\n        z-index: 2;\n        font-size: 2em;\n    }\n\n    .copy:hover {\n        text-shadow: 2px 2px rgb(153, 153, 153);\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}